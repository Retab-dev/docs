{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://api.uiform.com"
    }
  ],
  "paths": {
    "/v1/documents/monthly-usage": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Monthly Request Count",
        "operationId": "get_monthly_request_count_api_v1_documents_monthly_usage_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object",
                  "title": "Response Get Monthly Request Count Api V1 Documents Monthly Usage Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/documents/extract": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Process Documents",
        "operationId": "process_documents_api_v1_documents_extract_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Idempotency-Key"
            }
          },
          {
            "name": "OpenAI-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Openai-Api-Key"
            }
          },
          {
            "name": "Claude-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Claude-Api-Key"
            }
          },
          {
            "name": "Gemini-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gemini-Api-Key"
            }
          },
          {
            "name": "XAI-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xai-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleDocumentAPIRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse_Union_SingleDocumentAPIResponseContent__NoneType__"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/documents/extract-multipart": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Process Documents Multipart",
        "description": "Multi-part endpoint for document analysis. Allows uploading `json_schema` and `document` files via Swagger UI.",
        "operationId": "process_documents_multipart_api_v1_documents_extract_multipart_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Idempotency-Key"
            }
          },
          {
            "name": "OpenAI-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Openai-Api-Key"
            }
          },
          {
            "name": "Claude-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Claude-Api-Key"
            }
          },
          {
            "name": "Gemini-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gemini-Api-Key"
            }
          },
          {
            "name": "XAI-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xai-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_process_documents_multipart_api_v1_documents_extract_multipart_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardResponse_Union_SingleDocumentAPIResponseContent__NoneType__"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/documents/preprocess": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Preprocess",
        "operationId": "preprocess_api_v1_documents_preprocess_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleDocumentAPIRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Preprocess Api V1 Documents Preprocess Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/schemas/promptify": {
      "post": {
        "tags": [
          "Schemas"
        ],
        "summary": "Promptify",
        "description": "Receives a Raw JSON Schema (if custom annotations or not), a set of documents and an additional_context.\nReturns a Prompted JSON Schema, containing custom prompting annotations.",
        "operationId": "promptify_api_v1_schemas_promptify_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Idempotency-Key"
            }
          },
          {
            "name": "OpenAI-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Openai-Api-Key"
            }
          },
          {
            "name": "Claude-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Claude-Api-Key"
            }
          },
          {
            "name": "Gemini-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gemini-Api-Key"
            }
          },
          {
            "name": "XAI-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xai-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptifyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schemas/generate": {
      "post": {
        "tags": [
          "Schemas"
        ],
        "summary": "Generate Schema From Examples",
        "description": "Generates a JSON Schema from scratch by inferring structure from the content of the provided example documents.",
        "operationId": "generate_schema_from_examples_api_v1_schemas_generate_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Idempotency-Key"
            }
          },
          {
            "name": "OpenAI-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Openai-Api-Key"
            }
          },
          {
            "name": "Claude-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Claude-Api-Key"
            }
          },
          {
            "name": "Gemini-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gemini-Api-Key"
            }
          },
          {
            "name": "XAI-Api-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Xai-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateSchemaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSchemaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iam/organizations/schemas/": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "List Schemas",
        "operationId": "list_schemas_api_v1_iam_organizations_schemas__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "data_structure_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Structure Version"
            }
          },
          {
            "name": "is_current",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Current"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSchemaEntry"
                  },
                  "title": "Response List Schemas Api V1 Iam Organizations Schemas  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Create Schema",
        "operationId": "create_schema_api_v1_iam_organizations_schemas__post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSchemaEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSchemaEntry"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iam/organizations/schemas/data_structure_versions": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "Get All Data Structure Versions",
        "operationId": "get_all_data_structure_versions_api_v1_iam_organizations_schemas_data_structure_versions_get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "is_current",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Current"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Get All Data Structure Versions Api V1 Iam Organizations Schemas Data Structure Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iam/organizations/schemas/{schema_version}": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "Get Schema",
        "operationId": "get_schema_api_v1_iam_organizations_schemas__schema_version__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "schema_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Schema Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSchemaEntry"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Update Schema",
        "operationId": "update_schema_api_v1_iam_organizations_schemas__schema_version__post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "schema_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Schema Version"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchemaEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSchemaEntry"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iam/organizations/schemas/{version}": {
      "delete": {
        "tags": [
          "IAM"
        ],
        "summary": "Delete Schema",
        "operationId": "delete_schema_api_v1_iam_organizations_schemas__version__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "schema_version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Schema Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iam/applications/create_application": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Create Application",
        "operationId": "create_application_api_v1_iam_applications_create_application_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApplicationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/iam/applications/list": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "List Applications",
        "operationId": "list_applications_api_v1_iam_applications_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListApplicationsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/iam/applications/{client_id}": {
      "delete": {
        "tags": [
          "IAM"
        ],
        "summary": "Delete Application",
        "operationId": "delete_application_api_v1_iam_applications__client_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The client ID of the application to delete",
              "title": "Client Id"
            },
            "description": "The client ID of the application to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Application Api V1 Iam Applications  Client Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "IAM"
        ],
        "summary": "Update Application",
        "operationId": "update_application_api_v1_iam_applications__client_id__patch",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Client Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iam/payments/create-checkout-session": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Create Checkout Session",
        "description": "Creates a Stripe checkout session for monthly subscription.",
        "operationId": "create_checkout_session_api_v1_iam_payments_create_checkout_session_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "type": "object",
                  "title": "Response Create Checkout Session Api V1 Iam Payments Create Checkout Session Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/iam/payments/create-portal-session": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Create Portal Session",
        "description": "Creates a Stripe Customer Portal session for managing subscriptions.\n\nArgs:\n    identity: The authenticated user/application identity\n\nReturns:\n    Dictionary containing the portal URL",
        "operationId": "create_portal_session_api_v1_iam_payments_create_portal_session_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Create Portal Session Api V1 Iam Payments Create Portal Session Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/iam/payments/subscription-status": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "Subscription Status",
        "operationId": "subscription_status_api_v1_iam_payments_subscription_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/iam/team/create_and_link_organization": {
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Create And Link Organization",
        "operationId": "create_and_link_organization_api_v1_iam_team_create_and_link_organization_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAndLinkOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrganizationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/iam/team/members": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "List Team Members",
        "operationId": "list_team_members_api_v1_iam_team_members_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TeamMember"
                  },
                  "type": "array",
                  "title": "Response List Team Members Api V1 Iam Team Members Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/iam/team/members/{member_id}": {
      "delete": {
        "tags": [
          "IAM"
        ],
        "summary": "Remove Team Member",
        "operationId": "remove_team_member_api_v1_iam_team_members__member_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Member Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iam/team/invitations": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "List Invitations",
        "operationId": "list_invitations_api_v1_iam_team_invitations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TeamInvitation"
                  },
                  "type": "array",
                  "title": "Response List Invitations Api V1 Iam Team Invitations Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      },
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Create Invitation",
        "operationId": "create_invitation_api_v1_iam_team_invitations_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/iam/team/invitations/{invitation_id}": {
      "delete": {
        "tags": [
          "IAM"
        ],
        "summary": "Revoke Invitation",
        "operationId": "revoke_invitation_api_v1_iam_team_invitations__invitation_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invitation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iam/api_keys/": {
      "get": {
        "tags": [
          "IAM"
        ],
        "summary": "List Api Keys",
        "operationId": "list_api_keys_api_v1_iam_api_keys__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/APIKeyInfo"
                  },
                  "type": "array",
                  "title": "Response List Api Keys Api V1 Iam Api Keys  Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      },
      "post": {
        "tags": [
          "IAM"
        ],
        "summary": "Create Api Key",
        "operationId": "create_api_key_api_v1_iam_api_keys__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    },
    "/v1/iam/api_keys/{key_id}": {
      "delete": {
        "tags": [
          "IAM"
        ],
        "summary": "Revoke Api Key",
        "operationId": "revoke_api_key_api_v1_iam_api_keys__key_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/models/": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Get Models",
        "operationId": "get_models_api_v1_models__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Get Models Api V1 Models  Get"
                }
              }
            }
          }
        }
      }
    },
    "/datasets/upload-file": {
      "post": {
        "summary": "Upload File",
        "operationId": "upload_file_datasets_upload_file_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_datasets_upload_file_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadFileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "Master Key": []
          },
          {
            "API Key": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "APIKeyCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "APIKeyCreate"
      },
      "APIKeyInfo": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "is_active"
        ],
        "title": "APIKeyInfo"
      },
      "APIKeyResponse": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "key",
          "name",
          "created_at",
          "organization_id"
        ],
        "title": "APIKeyResponse"
      },
      "ApplicationResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "scope": {
            "type": "string",
            "title": "Scope"
          },
          "token_lifespan": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Lifespan"
          }
        },
        "type": "object",
        "required": [
          "name",
          "client_id",
          "metadata",
          "scope",
          "token_lifespan"
        ],
        "title": "ApplicationResponse"
      },
      "ApplicationUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "scope": {
            "type": "string",
            "title": "Scope"
          },
          "token_lifespan": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Lifespan"
          }
        },
        "type": "object",
        "required": [
          "name",
          "scope"
        ],
        "title": "ApplicationUpdate"
      },
      "BaseMIMEData": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier for the attachment"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Original filename of the attachment."
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "MIME type of the attachment, determining how it should be handled."
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "mime_type"
        ],
        "title": "BaseMIMEData"
      },
      "Body_process_documents_multipart_api_v1_documents_extract_multipart_post": {
        "properties": {
          "json_schema": {
            "type": "string",
            "format": "binary",
            "title": "Json Schema",
            "description": "JSON schema file to validate the output data"
          },
          "document": {
            "type": "string",
            "format": "binary",
            "title": "Document",
            "description": "Document to be analyzed"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "Model used for chat completion"
          },
          "additional_context": {
            "type": "string",
            "title": "Additional Context",
            "description": "JSON string for additional context to be used by the AI model",
            "default": "{\"regex_instructions\": [{\"name\": \"VAT Number\", \"description\": \"All potential VAT numbers in the documents\", \"pattern\": \"[Ff][Rr]\\\\s*(\\\\d\\\\s*){11}\"}]}"
          },
          "store_in_db": {
            "type": "boolean",
            "title": "Store In Db",
            "description": "If true, the extraction will be stored in the database",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "json_schema",
          "document",
          "model"
        ],
        "title": "Body_process_documents_multipart_api_v1_documents_extract_multipart_post"
      },
      "Body_upload_file_datasets_upload_file_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_file_datasets_upload_file_post"
      },
      "CreateAndLinkOrganizationRequest": {
        "properties": {
          "organization_name": {
            "type": "string",
            "title": "Organization Name"
          }
        },
        "type": "object",
        "required": [
          "organization_name"
        ],
        "title": "CreateAndLinkOrganizationRequest"
      },
      "CreateApplicationRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreateApplicationRequest"
      },
      "CreateApplicationResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "scope": {
            "type": "string",
            "title": "Scope"
          }
        },
        "type": "object",
        "required": [
          "name",
          "client_id",
          "client_secret",
          "scope"
        ],
        "title": "CreateApplicationResponse"
      },
      "CreateOrganizationResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "workos_organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "type": "object",
        "required": [
          "success",
          "workos_organization"
        ],
        "title": "CreateOrganizationResponse"
      },
      "CreateSchemaEntry": {
        "properties": {
          "prompted_json_schema": {
            "type": "object",
            "title": "Prompted Json Schema"
          },
          "is_current": {
            "type": "boolean",
            "title": "Is Current",
            "default": true
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "prompted_json_schema"
        ],
        "title": "CreateSchemaEntry"
      },
      "DocumentSection": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content_summary": {
            "type": "string",
            "title": "Content Summary"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "DocumentSection"
      },
      "DomainTerm": {
        "properties": {
          "term": {
            "type": "string",
            "title": "Term"
          },
          "definition": {
            "type": "string",
            "title": "Definition"
          }
        },
        "type": "object",
        "required": [
          "term",
          "definition"
        ],
        "title": "DomainTerm"
      },
      "ErrorDetail": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "details": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "title": "ErrorDetail"
      },
      "GenerateSchemaRequest": {
        "properties": {
          "additional_context": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptingContext"
              },
              {
                "type": "null"
              }
            ]
          },
          "model": {
            "type": "string",
            "title": "Model",
            "default": "gpt-4o-2024-11-20"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "default": 0.0
          },
          "modality": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "audio",
              "video",
              "native"
            ],
            "title": "Modality",
            "default": "native"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/MIMEData"
            },
            "type": "array",
            "title": "Documents"
          }
        },
        "type": "object",
        "required": [
          "documents"
        ],
        "title": "GenerateSchemaRequest",
        "description": "The request body for generating a JSON Schema from scratch."
      },
      "GenerateSchemaResponse": {
        "properties": {
          "additional_context": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptingContext"
              },
              {
                "type": "null"
              }
            ]
          },
          "model": {
            "type": "string",
            "title": "Model",
            "default": "gpt-4o-2024-11-20"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "default": 0.0
          },
          "modality": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "audio",
              "video",
              "native"
            ],
            "title": "Modality",
            "default": "native"
          },
          "json_schema": {
            "type": "object",
            "title": "Json Schema"
          }
        },
        "type": "object",
        "required": [
          "json_schema"
        ],
        "title": "GenerateSchemaResponse",
        "description": "The response body containing the generated JSON Schema."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InvitationRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "default": "member"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "InvitationRequest"
      },
      "ListApplicationsResponse": {
        "properties": {
          "applications": {
            "items": {
              "$ref": "#/components/schemas/ApplicationResponse"
            },
            "type": "array",
            "title": "Applications"
          }
        },
        "type": "object",
        "required": [
          "applications"
        ],
        "title": "ListApplicationsResponse"
      },
      "MIMEData": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier for the attachment"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Original filename of the attachment."
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "MIME type of the attachment, determining how it should be handled."
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Base64-encoded content of the attachment."
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "mime_type",
          "content"
        ],
        "title": "MIMEData"
      },
      "Organization": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "object": {
            "type": "string",
            "const": "organization",
            "title": "Object"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "domains": {
            "items": {
              "$ref": "#/components/schemas/OrganizationDomain"
            },
            "type": "array",
            "title": "Domains"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          },
          "allow_profiles_outside_organization": {
            "type": "boolean",
            "title": "Allow Profiles Outside Organization"
          },
          "lookup_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lookup Key"
          }
        },
        "type": "object",
        "required": [
          "id",
          "object",
          "name",
          "domains",
          "created_at",
          "updated_at",
          "allow_profiles_outside_organization"
        ],
        "title": "Organization"
      },
      "OrganizationDomain": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "object": {
            "type": "string",
            "const": "organization_domain",
            "title": "Object"
          },
          "domain": {
            "type": "string",
            "title": "Domain"
          },
          "state": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "failed",
                  "pending",
                  "legacy_verified",
                  "verified"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "verification_strategy": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "manual",
                  "dns"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Strategy"
          },
          "verification_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Token"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "object",
          "domain"
        ],
        "title": "OrganizationDomain"
      },
      "OrganizationSchemaEntry": {
        "properties": {
          "schema_version": {
            "type": "string",
            "title": "Schema Version",
            "description": "Version of the schema, the hash of the prompted_json_schema including all annotations."
          },
          "data_structure_version": {
            "type": "string",
            "title": "Data Structure Version",
            "description": "Version of the schema structure, the hash of the prompted_json_schema without annotations, descriptions, etc."
          },
          "is_current": {
            "type": "boolean",
            "title": "Is Current",
            "description": "This is a flag to indicate if this is the current schema for the object type"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "This is a flag to indicate if this schema is active, useful for A/B testing"
          },
          "tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag",
            "description": "Tag for the schema, only for display purposes"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation date of the schema"
          },
          "prompted_json_schema": {
            "type": "object",
            "title": "Prompted Json Schema",
            "description": "Prompted JSON schema for the object type"
          }
        },
        "type": "object",
        "required": [
          "schema_version",
          "data_structure_version",
          "is_current",
          "is_active",
          "created_at",
          "prompted_json_schema"
        ],
        "title": "OrganizationSchemaEntry"
      },
      "PromptifyRequest": {
        "properties": {
          "additional_context": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptingContext"
              },
              {
                "type": "null"
              }
            ]
          },
          "model": {
            "type": "string",
            "title": "Model",
            "default": "gpt-4o-2024-11-20"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "default": 0.0
          },
          "modality": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "audio",
              "video",
              "native"
            ],
            "title": "Modality",
            "default": "native"
          },
          "raw_schema": {
            "type": "object",
            "title": "Raw Schema"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/MIMEData"
            },
            "type": "array",
            "title": "Documents"
          }
        },
        "type": "object",
        "required": [
          "raw_schema",
          "documents"
        ],
        "title": "PromptifyRequest"
      },
      "PromptifyResponse": {
        "properties": {
          "additional_context": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptingContext"
              },
              {
                "type": "null"
              }
            ]
          },
          "model": {
            "type": "string",
            "title": "Model",
            "default": "gpt-4o-2024-11-20"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "default": 0.0
          },
          "modality": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "audio",
              "video",
              "native"
            ],
            "title": "Modality",
            "default": "native"
          },
          "json_schema": {
            "type": "object",
            "title": "Json Schema"
          }
        },
        "type": "object",
        "required": [
          "json_schema"
        ],
        "title": "PromptifyResponse"
      },
      "PromptingContext": {
        "properties": {
          "user_info": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "regex_instructions": {
            "items": {
              "$ref": "#/components/schemas/RegexInstruction"
            },
            "type": "array",
            "title": "Regex Instructions"
          },
          "document_structure": {
            "items": {
              "$ref": "#/components/schemas/DocumentSection"
            },
            "type": "array",
            "title": "Document Structure"
          },
          "domain_glossary": {
            "items": {
              "$ref": "#/components/schemas/DomainTerm"
            },
            "type": "array",
            "title": "Domain Glossary"
          },
          "other_context": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Other Context"
          }
        },
        "type": "object",
        "title": "PromptingContext"
      },
      "RegexInstruction": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "pattern": {
            "type": "string",
            "title": "Pattern"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name",
          "pattern",
          "description"
        ],
        "title": "RegexInstruction"
      },
      "RegexInstructionResult": {
        "properties": {
          "instruction": {
            "$ref": "#/components/schemas/RegexInstruction"
          },
          "hits": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "instruction",
          "hits"
        ],
        "title": "RegexInstructionResult"
      },
      "SingleDocumentAPIRequest": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model",
            "description": "Model used for chat completion"
          },
          "json_schema": {
            "type": "object",
            "title": "Json Schema",
            "description": "JSON schema format used to validate the output data."
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "description": "If true, the extraction will be streamed to the user using the active WebSocket connection",
            "default": false
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Seed for the random number generator. If not provided, a random seed will be generated.",
            "examples": [
              null
            ]
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "description": "Temperature for sampling. If not provided, the default temperature for the model will be used.",
            "default": 0.0,
            "examples": [
              0.0
            ]
          },
          "modality": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "audio",
              "video",
              "native"
            ],
            "title": "Modality",
            "description": "Modality of the document",
            "default": "native"
          },
          "document": {
            "$ref": "#/components/schemas/MIMEData",
            "description": "Document to be analyzed"
          },
          "additional_context": {
            "$ref": "#/components/schemas/PromptingContext",
            "description": "Additional context to be used by the AI model",
            "default": {},
            "examples": [
              {
                "document_structure": [
                  {
                    "content_summary": "Contains sender and receiver addresses",
                    "title": "Invoice Header"
                  }
                ],
                "domain_glossary": [
                  {
                    "definition": "Bill of Lading",
                    "term": "B/L"
                  }
                ],
                "other_context": [
                  "Please consider the following instructions: ..."
                ],
                "regex_instructions": [
                  {
                    "description": "All potential VAT numbers in the documents",
                    "name": "VAT Number",
                    "pattern": "[Ff][Rr]\\s*(\\d\\s*){11}"
                  }
                ],
                "user_info": {
                  "email": "john.doe@domain.com",
                  "first_name": "John",
                  "last_name": "Doe"
                }
              }
            ]
          },
          "ws_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ws Identifier",
            "description": "Identifier of the WebSocket connection used to stream the extraction"
          },
          "store_in_db": {
            "type": "boolean",
            "title": "Store In Db",
            "description": "If true, the extraction will be stored in the database",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "model",
          "json_schema",
          "document"
        ],
        "title": "SingleDocumentAPIRequest"
      },
      "SingleDocumentAPIResponseContent": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "Unique identifier of the analysis. Only useful if store_in_db is True."
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature"
          },
          "document": {
            "$ref": "#/components/schemas/BaseMIMEData",
            "description": "Document analyzed (without content, for MongoDB storage)"
          },
          "extraction": {
            "title": "Extraction",
            "description": "Informations extracted from the document"
          },
          "likelihoods": {
            "title": "Likelihoods",
            "description": "Uncertainties of the fields extracted from the document"
          },
          "regex_instruction_results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RegexInstructionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Regex Instruction Results",
            "description": "Results of the regex instructions"
          },
          "additional_context_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Context Message",
            "description": "Message generated from the prompting context"
          },
          "usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UsageData"
              },
              {
                "type": "null"
              }
            ]
          },
          "modality": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "audio",
              "video",
              "native"
            ],
            "title": "Modality",
            "description": "Modality of the document",
            "default": "native"
          }
        },
        "type": "object",
        "required": [
          "id",
          "model",
          "temperature",
          "document",
          "extraction",
          "likelihoods"
        ],
        "title": "SingleDocumentAPIResponseContent",
        "document": {
          "metadata": false
        }
      },
      "StandardResponse_Union_SingleDocumentAPIResponseContent__NoneType__": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ErrorDetail"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SingleDocumentAPIResponseContent"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "StandardResponse[Union[SingleDocumentAPIResponseContent, NoneType]]"
      },
      "SubscriptionStatus": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "active",
              "canceled",
              "incomplete",
              "incomplete_expired",
              "past_due",
              "paused",
              "trialing",
              "unpaid"
            ],
            "title": "Status",
            "default": "incomplete"
          },
          "plan": {
            "type": "string",
            "title": "Plan",
            "default": ""
          },
          "current_period_end": {
            "type": "integer",
            "title": "Current Period End",
            "default": 0
          },
          "plan_name": {
            "type": "string",
            "title": "Plan Name",
            "default": ""
          },
          "cancel_at_period_end": {
            "type": "boolean",
            "title": "Cancel At Period End",
            "default": false
          }
        },
        "type": "object",
        "title": "SubscriptionStatus"
      },
      "TeamInvitation": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "accepted": {
            "type": "boolean",
            "title": "Accepted"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "accepted"
        ],
        "title": "TeamInvitation"
      },
      "TeamMember": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "role"
        ],
        "title": "TeamMember"
      },
      "UpdateSchemaEntry": {
        "properties": {
          "tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_current": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Current"
          }
        },
        "type": "object",
        "title": "UpdateSchemaEntry"
      },
      "UploadFileResponse": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL of the uploaded file"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the uploaded file"
          }
        },
        "type": "object",
        "required": [
          "url",
          "id"
        ],
        "title": "UploadFileResponse"
      },
      "UsageData": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "input_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Tokens"
          },
          "output_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Tokens"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          }
        },
        "type": "object",
        "required": [
          "model"
        ],
        "title": "UsageData"
      },
      "UserInfo": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "organization": {
            "type": "string",
            "title": "Organization"
          },
          "phone": {
            "type": "string",
            "title": "Phone"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          }
        },
        "type": "object",
        "title": "UserInfo"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "Master Key": {
        "type": "apiKey",
        "description": "Master Key and Organization ID separated by '::'. Example: '[KEY]::[ORG_ID]'",
        "in": "header",
        "name": "Master-Key"
      },
      "API Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Api-Key"
      }
    }
  }
}